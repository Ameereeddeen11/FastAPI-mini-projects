"""category and notes table

Revision ID: b799b5375e6d
Revises: 73d78614b02a
Create Date: 2024-07-20 12:52:18.279531

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b799b5375e6d'
down_revision: Union[str, None] = '73d78614b02a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category_notes',
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('note_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_notes_id'), 'category_notes', ['id'], unique=False)
    op.drop_constraint('categories_name_key', 'categories', type_='unique')
    op.drop_constraint('categories_notes_id_fkey', 'categories', type_='foreignkey')
    op.drop_column('categories', 'notes_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('categories', sa.Column('notes_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('categories_notes_id_fkey', 'categories', 'notes', ['notes_id'], ['id'])
    op.create_unique_constraint('categories_name_key', 'categories', ['name'])
    op.drop_index(op.f('ix_category_notes_id'), table_name='category_notes')
    op.drop_table('category_notes')
    # ### end Alembic commands ###
